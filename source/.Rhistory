zona3 <- c("Goondiwindi", "Taroom","Charleville", "Longreach","Thargomindah","Birdsville","MountIsa","AliceSprings","Kulgera","Yulara","Telfer","Newman", "GascoyneJunction","Carnavon","Uluru")
zona4 <- c("Woomera","Yalgoo", "Wiluna", "KalgoorlieBoulder", "Norseman", "Merredin","Newdegate","Warburton", "Amata","Oodnadatta","CooberPedy", "Nullarbor", "Innamincka","Whyalla","BrokenHill","Tibooburra","Bourke","Ivanhoe","Mildura","Griffith","Albury","WaggaWagga","Wodonga","Dubbo","Tamworth","Shepparton","Cobar","Moree","Nhil")
zona5 <- c("Geraldton","Perth","Witchcliffe","Bunbury","MargaretRiver","Esperance","Eucla","Ceduna","PortLincoln","Adelaide","LeighCreek","Renmark","Wollongong","Sydney","SydneyAirport","Newcastle","PortMacquaire","NorahHead","PearceRAAF","Penrith","PerthAirport")
zona6 <- c("Albany","Burra","Kingscote","KingstonSE","MountGambier","Horsham","Watsonia","Melbourne","LakesEntrance","BadgerysCreek","Bendigo","Dartmoor","MelbourneAirport","Nuriootpa","Sale","SalmonGums")
zona7 <- c("Ballarat","Canberra","Bathurst","Devonport","Strahan","Launceston","Swansea","Hobart","Southport","Tuggeranong")
zona8 <- c("MountGinini")
zonas <- c(zona1,zona2,zona3,zona4,zona5,zona6,zona7,zona8)
zona_climatica <- c()
# Asignamos cada ciudad a una zona climática
for(city in levels(db$Location)){
if(city %in% zona1){
zona_climatica <- c(zona_climatica,1)
}
else if(city %in% zona2){
zona_climatica <- c(zona_climatica,2)
}
else if(city %in% zona3){
zona_climatica <- c(zona_climatica,3)
}
else if(city %in% zona4){
zona_climatica <- c(zona_climatica,4)
}
else if(city %in% zona5){
zona_climatica <- c(zona_climatica,5)
}
else if(city %in% zona6){
zona_climatica <- c(zona_climatica,6)
}
else if(city %in% zona7){
zona_climatica <- c(zona_climatica,7)
}
else if(city %in% zona8){
zona_climatica <- c(zona_climatica,8)
}
else { # Los lugares sin zona climática le asignamos el 0, para luego eliminar estas observaciones
zona_climatica <- c(zona_climatica,0)
}
}
# Creamos dataframe de zonas climáticas
zonas_climaticas <- data.frame(levels(db$Location),zona_climatica) %>% rename(Location=levels.db.Location.)
#zonas_climaticas %>% View()
# Chunk 11: Tab-5
# Añadimos las zonas climáticas
db <- left_join(zonas_climaticas,db, by="Location",strings)
db$Location <- db$Location %>% as.factor()
# Eliminamos la zona climática 0
db <- db %>% filter(., zona_climatica != 0)
db <- droplevels(db)
#db$zona_climatica <- db$zona_climatica %>% as.factor()
# Contamos valores totales por zona climática:
#db %>% count(zona_climatica,name = "n_obs") %>% View()
# Contamos cantidad de ciudades por zona climática
#db %>% count(zona_climatica,Location) %>%count(zona_climatica,name="n_locations") %>%  View()
# Comprobamos datos continuos
# db %>% count(zona_climatica,Location) %>% View() # esto confirma que tenemos 1272 datos para cada ciudad
# Todo a la vez:
climate_zones_db <- db %>% count(zona_climatica,name = "n_obs") %>% left_join(.,db %>% count(zona_climatica,Location) %>%count(zona_climatica,name="n_locations"), by="zona_climatica",strings) %>% select(.,-c(zona_climatica))
rownames(climate_zones_db) <- c("Zona 1", "Zona 2", "Zona 3", "Zona 4", "Zona 5", "Zona 6","Zona 7","Zona 8")
climate_zones_db %>% kbl(., booktabs = T,caption = "Cantidad de observaciones y localizaciones por zona climática") %>% kable_styling(latex_options = c("striped","hold_position"))
# Chunk 12
db_zone1 <- db %>% filter(., zona_climatica == 1) %>% select(., -zona_climatica)
db_zone1 <- droplevels(db_zone1)
db_zone2 <- db %>% filter(., zona_climatica == 2) %>% select(., -zona_climatica)
db_zone2 <- droplevels(db_zone2)
db_zone3 <- db %>% filter(., zona_climatica == 3) %>% select(., -zona_climatica)
db_zone3 <- droplevels(db_zone3)
db_zone4 <- db %>% filter(., zona_climatica == 4) %>% select(., -zona_climatica)
db_zone4 <- droplevels(db_zone4)
db_zone5 <- db %>% filter(., zona_climatica == 5) %>% select(., -zona_climatica)
db_zone5 <- droplevels(db_zone5)
db_zone6 <- db %>% filter(., zona_climatica == 6) %>% select(., -zona_climatica)
db_zone6 <- droplevels(db_zone6)
db_zone7 <- db %>% filter(., zona_climatica == 7) %>% select(., -zona_climatica)
db_zone7 <- droplevels(db_zone7)
db_zone8 <- db %>% filter(., zona_climatica == 8) %>% select(., -zona_climatica)
db_zone8 <- droplevels(db_zone8)
# Creamos diccionario con los df para poder iterar
zonas <- list("zona1"=db_zone1,
"zona2"=db_zone2,
"zona3"=db_zone3,
"zona4"=db_zone4,
"zona5"=db_zone5,
"zona6"=db_zone6,
"zona7"=db_zone7,
"zona8"=db_zone8)
#print(nrow(db) == (nrow(db_zone1) + nrow(db_zone2) + nrow(db_zone3) + nrow(db_zone4) + nrow(db_zone5) + nrow(db_zone6) + nrow(db_zone7) + nrow(db_zone8)))
# Chunk 13: Tab-6
# Crear función de comprobar missings
# counting missing values
get_missings <- function(){
df_missings <- NULL;
for(i in 1:length(zonas)){
row <- zonas[[i]] %>% select(everything()) %>% summarise_all(funs(sum(is.na(.))))*100 / nrow(zonas[[i]])
df_missings <- df_missings %>% rbind(.,row)
}
rownames(df_missings) <- c("zona1",
"zona2",
"zona3",
"zona4",
"zona5",
"zona6",
"zona7",
"zona8")
return(df_missings)
}
df_missings <- get_missings()
# df_missings %>% View()
#
df_missings01 <- df_missings[,1:8]
df_missings02 <- df_missings[,9:15]
df_missings03 <- df_missings[,16:23]
df_missings01 <- df_missings01 %>% kbl(., booktabs = T, caption = "Porcentaje de valores faltantes por cada zona y variable.") %>% kable_styling(latex_options = c("striped","hold_position","scale_down"))
df_missings02 <- df_missings02 %>% kbl(., booktabs = T) %>% kable_styling(latex_options = c("striped","hold_position","scale_down"))
df_missings03 <- df_missings03 %>% kbl(., booktabs = T) %>% kable_styling(latex_options = c("striped","scale_down","hold_position"))
# Chunk 14
df_missings01
df_missings02
df_missings03
# Chunk 15
for(i in 1:length(zonas)){
zonas[[i]] <- zonas[[i]] %>% select(., -any_of(c("Evaporation", "Sunshine", "Pressure9am", "Pressure3pm", "Cloud9am", "Cloud3pm")))
}
# Chunk 16: función para calcular la moda
calc_mode <- function(x){
# List the distinct / unique values
distinct_values <- unique(x)
# Count the occurrence of each distinct value
distinct_tabulate <- tabulate(match(x, distinct_values))
top <- which.max(distinct_tabulate)
# Return the value with the highest occurrence
mode <- distinct_values[top]
if(is.na(mode)){
top <- distinct_tabulate[distinct_tabulate!=distinct_tabulate[top]] %>% which.max()
mode <- distinct_values[top]
}
return(mode)
}
# Chunk 17: Replace missings
# mutate missing values
#columnas_enteras <- zonas[[1]][, unlist(lapply(zonas[[1]], is.integer), use.names = FALSE) ] %>% colnames()
columnas_numericas <- zonas[[1]][, unlist(lapply(zonas[[1]], is.numeric), use.names = FALSE) ] %>% colnames() #%>% setdiff(.,columnas_enteras)
columnas_categoricas <- zonas[[1]][, unlist(lapply(zonas[[1]], is.factor), use.names = FALSE) ] %>% colnames()
# reemplazamos variables continuas por la media
for(i in 1:length(zonas)){
zonas[[i]] <- zonas[[i]] %>% mutate_at(columnas_numericas, ~replace_na(.,mean(., na.rm = TRUE)))
}
# reemplazamos variables enteras por la media truncada
# for(i in 1:length(zonas)){
#   zonas[[i]] <- zonas[[i]] %>% mutate_at(columnas_enteras, ~replace_na(.,floor(mean(., na.rm = TRUE))))
# }
# reemplazamos variables categóricas por la moda
for(i in 1:length(zonas)){
zonas[[i]] <- zonas[[i]] %>% mutate_at(columnas_categoricas, ~replace_na(.,calc_mode(.)))
}
df_missings <- get_missings()
# df_missings %>% View()
# Chunk 18: Tab-8
t <- sort(sample(1:ncol(df_missings),8))
df_missings01 <- df_missings %>% select(.,all_of(t))
df_missings01 <- df_missings01 %>% kbl(., booktabs = T, caption = "Muestra de variables con valores faltantes imputados.") %>% kable_styling(latex_options = c("striped","hold_position","scale_down"))
df_missings01
get_outliers <- function(){
saved_plots <- list.files("../pics/outliers")
if(length(saved_plots)<8){
plots_list <- list()
for(i in 1:length(zonas)){
ps <- list()
db_temp <- zonas[[i]][,c(columnas_numericas)]
for(colu in db_temp %>% colnames() %>% setdiff(.,"RainTomorrow")){
p <- ggplot(zonas[[i]], aes_string(x="RainTomorrow", y=colu, color="RainTomorrow")) + geom_violin() + geom_boxplot(width=0.25) + stat_boxplot(geom = "errorbar", width = 0.2) + theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size=6),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=8),
legend.title = element_blank())
ps[[colu]] <- p
}
new_name <- paste0("zona",as.character(i))
plots_list[[new_name]] <- ggarrange(plotlist =  ps, nrow = 4,ncol = 3,common.legend = TRUE)
ggexport(plot_list[new_name],filename = paste0(c("../pics/plots/outliers/out0",as.character(i),".png")),width = 750, height = 750)
dev.off()
}
return(plots_list)} else{
}
}
plot_list <- get_outliers()
# For zona in names(plot_list) print nicely test["zona1"]$zona1
get_outliers <- function(){
saved_plots <- list.files("../pics/outliers")
if(length(saved_plots)<8){
plots_list <- list()
for(i in 1:length(zonas)){
ps <- list()
db_temp <- zonas[[i]][,c(columnas_numericas)]
for(colu in db_temp %>% colnames() %>% setdiff(.,"RainTomorrow")){
p <- ggplot(zonas[[i]], aes_string(x="RainTomorrow", y=colu, color="RainTomorrow")) + geom_violin() + geom_boxplot(width=0.25) + stat_boxplot(geom = "errorbar", width = 0.2) + theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size=6),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=8),
legend.title = element_blank())
ps[[colu]] <- p
}
new_name <- paste0("zona",as.character(i))
plots_list[[new_name]] <- ggarrange(plotlist =  ps, nrow = 4,ncol = 3,common.legend = TRUE)
ggexport(plot_list[new_name],filename = paste0(c("../pics/plots/outliers/out0",as.character(i),".png")),width = 750, height = 750)
dev.off()
}
return(plots_list)} else{
}
}
plot_list <- get_outliers()
# For zona in names(plot_list) print nicely test["zona1"]$zona1
?rasterImage
?draw_image
ggdraw() +draw_image("../pics/plots/outliers/out01.png")
?ggdraw
library(cowplot)
ggdraw() +draw_image("../pics/plots/outliers/out01.png")
p <- ggdraw() +draw_image("../pics/plots/outliers/out01.png")
p
table(zonas[[1]]$RainTomorrow)
columnas_numericas
get_outliers <- function(){
saved_plots <- list.files("../pics/outliers")
plots_list <- list()
if(length(saved_plots)<8){
for(i in 1:length(zonas)){
ps <- list()
db_temp <- zonas[[i]][,c(columnas_numericas)]
for(colu in db_temp %>% colnames() %>% setdiff(.,"RainTomorrow")){
p <- ggplot(zonas[[i]], aes_string(x="RainTomorrow", y=colu, color="RainTomorrow")) + geom_violin() + geom_boxplot(width=0.25) + stat_boxplot(geom = "errorbar", width = 0.2) + theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size=6),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=8),
legend.title = element_blank())
ps[[colu]] <- p
}
new_name <- paste0("zona",as.character(i))
plots_list[[new_name]] <- ggarrange(plotlist =  ps, nrow = 4,ncol = 3,common.legend = TRUE)
ggexport(plot_list[new_name],filename = paste0(c("../pics/plots/outliers/out0",as.character(i),".png")),width = 750, height = 750)
dev.off()
}
return(plots_list)
} else{for(i in 1:length(zonas)){
new_name <- paste0("zona",as.character(i))
p <- ggdraw() +draw_image(paste0(c("../pics/plots/outliers/out0",as.character(i),".png")))
plots_list[[new_name]] <- p
dev.off()
}
return(plot_list)
}
}
plot_list <- get_outliers()
# For zona in names(plot_list) print nicely test["zona1"]$zona1
get_outliers <- function(){
saved_plots <- list.files("../pics/outliers")
plots_list <- list()
if(length(saved_plots)<8){
for(i in 1:length(zonas)){
ps <- list()
db_temp <- zonas[[i]][,c(columnas_numericas)]
for(colu in db_temp %>% colnames() %>% setdiff(.,"RainTomorrow")){
p <- ggplot(zonas[[i]], aes_string(x="RainTomorrow", y=colu, color="RainTomorrow")) + geom_violin() + geom_boxplot(width=0.25) + stat_boxplot(geom = "errorbar", width = 0.2) + theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size=6),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=8),
legend.title = element_blank())
ps[[colu]] <- p
}
new_name <- paste0("zona",as.character(i))
plots_list[[new_name]] <- ggarrange(plotlist =  ps, nrow = 4,ncol = 3,common.legend = TRUE)
ggexport(plot_list[[new_name]],filename = paste0(c("../pics/plots/outliers/out0",as.character(i),".png")),width = 750, height = 750)
dev.off()
}
return(plots_list)
} else{for(i in 1:length(zonas)){
new_name <- paste0("zona",as.character(i))
p <- ggdraw() +draw_image(paste0(c("../pics/plots/outliers/out0",as.character(i),".png")))
plots_list[[new_name]] <- p
dev.off()
}
return(plot_list)
}
}
plot_list <- get_outliers()
# For zona in names(plot_list) print nicely test["zona1"]$zona1
get_outliers <- function(){
saved_plots <- list.files("../pics/outliers")
plots_list <- list()
if(length(saved_plots)<8){
for(i in 1:length(zonas)){
ps <- list()
db_temp <- zonas[[i]][,c(columnas_numericas)]
for(colu in db_temp %>% colnames() %>% setdiff(.,"RainTomorrow")){
p <- ggplot(zonas[[i]], aes_string(x="RainTomorrow", y=colu, color="RainTomorrow")) + geom_violin() + geom_boxplot(width=0.25) + stat_boxplot(geom = "errorbar", width = 0.2) + theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size=6),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=8),
legend.title = element_blank())
ps[[colu]] <- p
}
new_name <- paste0("zona",as.character(i))
plots_list[[new_name]] <- ggarrange(plotlist =  ps, nrow = 4,ncol = 3,common.legend = TRUE)
#ggexport(plot_list[[new_name]],filename = paste0(c("../pics/plots/outliers/out0",as.character(i),".png")),width = 750, height = 750)
dev.off()
}
return(plots_list)
} else{for(i in 1:length(zonas)){
new_name <- paste0("zona",as.character(i))
p <- ggdraw() +draw_image(paste0(c("../pics/plots/outliers/out0",as.character(i),".png")))
plots_list[[new_name]] <- p
dev.off()
}
return(plot_list)
}
}
plot_list <- get_outliers()
# For zona in names(plot_list) print nicely test["zona1"]$zona1
get_outliers <- function(){
saved_plots <- list.files("../pics/outliers")
plots_list <- list()
if(length(saved_plots)<8){
for(i in 1:length(zonas)){
ps <- list()
db_temp <- zonas[[i]][,c(columnas_numericas)]
for(colu in db_temp %>% colnames() %>% setdiff(.,"RainTomorrow")){
p <- ggplot(zonas[[i]], aes_string(x="RainTomorrow", y=colu, color="RainTomorrow")) + geom_violin() + geom_boxplot(width=0.25) + stat_boxplot(geom = "errorbar", width = 0.2) + theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size=6),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=8),
legend.title = element_blank())
ps[[colu]] <- p
}
new_name <- paste0("zona",as.character(i))
plots_list[[new_name]] <- ggarrange(plotlist =  ps, nrow = 4,ncol = 3,common.legend = TRUE)
ggexport(plots_list[[new_name]],filename = paste0(c("../pics/plots/outliers/out0",as.character(i),".png")),width = 750, height = 750)
dev.off()
}
return(plots_list)
} else{for(i in 1:length(zonas)){
new_name <- paste0("zona",as.character(i))
p <- ggdraw() +draw_image(paste0(c("../pics/plots/outliers/out0",as.character(i),".png")))
plots_list[[new_name]] <- p
dev.off()
}
return(plot_list)
}
}
plot_list <- get_outliers()
# For zona in names(plot_list) print nicely test["zona1"]$zona1
get_outliers <- function(){
saved_plots <- list.files("../pics/outliers")
plots_list <- list()
if(length(saved_plots)<8){
for(i in 1:length(zonas)){
ps <- list()
db_temp <- zonas[[i]][,c(columnas_numericas)]
for(colu in db_temp %>% colnames() %>% setdiff(.,"RainTomorrow")){
p <- ggplot(zonas[[i]], aes_string(x="RainTomorrow", y=colu, color="RainTomorrow")) + geom_violin() + geom_boxplot(width=0.25) + stat_boxplot(geom = "errorbar", width = 0.2) + theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size=6),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=8),
legend.title = element_blank())
ps[[colu]] <- p
}
new_name <- paste0("zona",as.character(i))
plots_list[[new_name]] <- ggarrange(plotlist =  ps, nrow = 4,ncol = 3,common.legend = TRUE)
#ggexport(plots_list[[new_name]],filename = paste0(c("../pics/plots/outliers/out0",as.character(i),".png")),width = 750, height = 750)
dev.off()
}
return(plots_list)
} else{for(i in 1:length(zonas)){
new_name <- paste0("zona",as.character(i))
p <- ggdraw() +draw_image(paste0(c("../pics/plots/outliers/out0",as.character(i),".png")))
plots_list[[new_name]] <- p
dev.off()
}
return(plot_list)
}
}
plot_list <- get_outliers()
# For zona in names(plot_list) print nicely test["zona1"]$zona1
plots_list[["zona1"]]
get_outliers <- function(){
saved_plots <- list.files("../pics/outliers")
plots_list <- list()
if(length(saved_plots)<8){
for(i in 1:length(zonas)){
ps <- list()
db_temp <- zonas[[i]][,c(columnas_numericas)]
for(colu in db_temp %>% colnames() %>% setdiff(.,"RainTomorrow")){
p <- ggplot(zonas[[i]], aes_string(x="RainTomorrow", y=colu, color="RainTomorrow")) + geom_violin() + geom_boxplot(width=0.25) + stat_boxplot(geom = "errorbar", width = 0.2) + theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size=6),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=8),
legend.title = element_blank())
ps[[colu]] <- p
}
new_name <- paste0("zona",as.character(i))
plots_list[[new_name]] <- ggarrange(plotlist =  ps, nrow = 4,ncol = 3,common.legend = TRUE)
#ggexport(plots_list[[new_name]],filename = paste0(c("../pics/plots/outliers/out0",as.character(i),".png")),width = 750, height = 750)
dev.off()
}
return(plots_list)
} else{for(i in 1:length(zonas)){
new_name <- paste0("zona",as.character(i))
p <- ggdraw() +draw_image(paste0(c("../pics/plots/outliers/out0",as.character(i),".png")))
plots_list[[new_name]] <- p
dev.off()
}
return(plot_list)
}
}
plot_list <- get_outliers()
# For zona in names(plot_list) print nicely test["zona1"]$zona1
plots_list[["zona1"]]
plot_list[["zona1"]]
plot_list[[1]]
get_outliers <- function(){
saved_plots <- list.files("../pics/outliers")
plots_list <- list()
if(length(saved_plots)<8){
for(i in 1:length(zonas)){
ps <- list()
db_temp <- zonas[[i]][,c(columnas_numericas)]
for(colu in db_temp %>% colnames() %>% setdiff(.,"RainTomorrow")){
p <- ggplot(zonas[[i]], aes_string(x="RainTomorrow", y=colu, color="RainTomorrow")) + geom_violin() + geom_boxplot(width=0.25) + stat_boxplot(geom = "errorbar", width = 0.2) + theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size=6),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=8),
legend.title = element_blank())
ps[[colu]] <- p
}
new_name <- paste0("zona",as.character(i))
plots_list[[new_name]] <- ggarrange(plotlist =  ps, nrow = 4,ncol = 3,common.legend = TRUE)
ggexport(plots_list[[i]],filename = paste0(c("../pics/plots/outliers/out0",as.character(i),".png")),width = 750, height = 750)
dev.off()
}
return(plots_list)
} else{for(i in 1:length(zonas)){
new_name <- paste0("zona",as.character(i))
p <- ggdraw() +draw_image(paste0(c("../pics/plots/outliers/out0",as.character(i),".png")))
plots_list[[new_name]] <- p
dev.off()
}
return(plot_list)
}
}
plot_list <- get_outliers()
# For zona in names(plot_list) print nicely test["zona1"]$zona1
get_outliers <- function(){
saved_plots <- list.files("../pics/outliers")
plots_list <- list()
if(length(saved_plots)<8){
for(i in 1:length(zonas)){
ps <- list()
db_temp <- zonas[[i]][,c(columnas_numericas)]
for(colu in db_temp %>% colnames() %>% setdiff(.,"RainTomorrow")){
p <- ggplot(zonas[[i]], aes_string(x="RainTomorrow", y=colu, color="RainTomorrow")) + geom_violin() + geom_boxplot(width=0.25) + stat_boxplot(geom = "errorbar", width = 0.2) + theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size=6),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
legend.key.size = unit(0.1, 'cm'),
legend.text = element_text(size=8),
legend.title = element_blank())
ps[[colu]] <- p
}
new_name <- paste0("zona",as.character(i))
plots_list[[new_name]] <- ggarrange(plotlist =  ps, nrow = 4,ncol = 3,common.legend = TRUE)
print(typeof(plots_list[[i]]))
#ggexport(plots_list[[i]],filename = paste0(c("../pics/plots/outliers/out0",as.character(i),".png")),width = 750, height = 750)
dev.off()
}
return(plots_list)
} else{for(i in 1:length(zonas)){
new_name <- paste0("zona",as.character(i))
p <- ggdraw() +draw_image(paste0(c("../pics/plots/outliers/out0",as.character(i),".png")))
plots_list[[new_name]] <- p
dev.off()
}
return(plot_list)
}
}
plot_list <- get_outliers()
# For zona in names(plot_list) print nicely test["zona1"]$zona1
